name: Deploy
on: [push]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t mt:latest .
          docker save -o mt.tar mt:latest
          chmod 644 mt.tar  # Устанавливаем правильные права

      - name: Upload image to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: 'mt.tar'
          target: '/tmp/'
          overwrite: true
          rm: true # Удалить локальный файл после передачи

      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Проверяем наличие файла
            if [ ! -f /tmp/mt.tar ]; then
              echo "Error: File /tmp/mt.tar not found!"
              exit 1
            fi

            # Загружаем образ
            docker load -i /tmp/mt.tar || exit 1

            # Останавливаем старый контейнер
            docker stop mt || true
            docker rm mt || true

            # Запускаем новый контейнер
            docker run -d \
              --name mt \
              --restart unless-stopped \
              -p 3000:3000 \
              -v /var/run/docker.sock:/var/run/docker.sock \
              mt:latest

            # Очистка
            rm -f /tmp/mt.tar
            docker system prune -f

      - name: Cleanup
        run: |
          rm -f mt.tar || true
          docker system prune -f || true
